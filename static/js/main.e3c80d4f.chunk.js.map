{"version":3,"sources":["Pages/PlantLife/assets/menu.svg","Pages/PlantLife/assets/close.svg","Components/Circle/index.jsx","Pages/HomePage/data/index.js","Pages/HomePage/index.jsx","Pages/PlantLife/components/Nav/index.jsx","Pages/PlantLife/components/Home/index.jsx","Pages/PlantLife/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Circle","className","data","title","description","image","link","HomePage","href","target","rel","cite","src","alt","id","map","project","idx","key","to","Nav","Home","state","currentSlide","z","imageUrls","handleSlideClick","length","images","forEach","style","animation","setState","zIndex","handleSlideMouseOver","x","Math","floor","random","y","transform","handleSlideMouseOut","this","props","menuIsOpen","handleMenuClick","onMouseOut","onMouseOver","onClick","ref","Component","PlantLife","close","open","exact","path","render","App","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3c80d4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.060f7d19.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.b2f8ae3a.svg\";","import React from 'react'\nimport './circle.css'\n\nconst Circle = () => {\n    return ( \n        <div className=\"Circle-circle\"></div>\n     );\n}\n \nexport default Circle;\n","const data = [\n    {\n        title: 'Plant Life',\n        description: 'We go further with Javascript events by adding in click, mouseover and mouseout events, plus talking about how to add randomness into our design work.',\n        image: './assets/plant-life/plant-life.png',\n        link: '/plant-life',\n    },\n    {\n        title: 'Type Checker',\n        description: 'With Type Checker, we discuss how to work with form tags such as inputs, sliders, checkboxes and select boxes to build up interactivity to our projects.',\n        image: './assets/type-checker/assets/type-checker.png',\n        link: '',\n    },\n    {\n        title: 'Jenna Buchholz',\n        description: 'With this project, we go in depth into scroll events and parallax by adding progress bars, waypoints and thresholds.',\n        image: './assets/jenna-buchholz/assets/jenna-buchholz.png',\n        link: '',\n    },\n    {\n        title: 'Brux',\n        description: 'We extend our Javascript events knowledge by talking more about scroll and mouse movement events to add design elements such as fade on scroll and eyes that follow your cursor.',\n        image: './assets/brux/assets/brux.png',\n        link: '',\n    },\n    {\n        title: 'Words of Womxn',\n        description: 'We tie all of our learnings together by adding layers of Javascript to a project to take it from something static into a dynamic, fun site.',        \n        image: './assets/words-of-womxn/assets/words-of-womxn.png',\n        link: '',\n    },\n]\n\nexport default data","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { Circle } from '../../Components'\nimport data from './data'\nimport './HomePage.css';\n\nconst HomePage = () => {\n    return ( \n      <div className=\"HomePage\">\n        <header className=\"HomePage-header\">\n          <nav className=\"HomePage-navbar\">\n            \n            <ul className=\"HomePage-nav\">\n              <li>\n              \n              <a  href=\"/\"  className=\"HomePage-link\">JS for Designers</a>\n              </li> \n              <li>\n                <a className=\"HomePage-link\" href=\"#Projects\">Projects</a> \n              </li>\n    \n              \n            </ul>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.gideonjr.com\"><Circle /></a>\n          </nav>\n        \n          <section className=\"HomePage-header--content\">\n            <article className=\"HomePage-header--text\">\n              <h1>\n              Javascript for Designers\n              </h1>\n              <p>\n            \n              In a short course by <a className=\"HomePage-link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.superhi.com\"><i>SuperHi</i></a>, I learned how to work with Javascript in a creative, fun way aimed at people who design. Then, I used <a className=\"HomePage-link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.reactjs.org\"><i>React</i></a> to implement extra features outside of the SuperHi scope.\n              \n              </p>\n              <blockquote cite=\"https://www.superhi.com/courses/javascript-for-designers\">\n\n              <p>\n              Javascript is one of the most used languages in the world but its learning curve is relatively steep. \n              </p> \n              <footer>â€“SuperHi, <cite>Javascript for Designers</cite></footer>\n              </blockquote>\n            </article>\n          \n          </section>\n          <section className=\"HomePage-header-arrow\">\n            <a  href=\"#Projects\"><img src=\"./assets/chevron-down.svg\" alt=\"Chevron Down\"/></a>\n          </section>\n        </header>\n        <main id=\"Projects\" className=\"HomePage-projects-list\">\n          <div  className=\"HomePage-section-heading\">\n          <h2>Projects</h2>\n          <p>These projects were completed with <a className=\"HomePage-link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.superhi.com\"><i>SuperHi</i></a>'s <a className=\"HomePage-link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.superhi.com/courses/javascript-for-designers\"><i>Javascript for Designers</i></a> course and extended using React. Checkout the Github repository for this entire project <a className=\"HomePage-link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/gideonibemerejr/js-for-designers\"><i>here</i></a>.</p>\n          </div>\n          {\n            data.map((project, idx) => (\n          \n              <section key={idx} className=\"HomePage-project-card\">\n                <div className=\"HomePage-project-card--text\">\n                  <h3>{project.title}</h3>\n                  <p>{project.description}</p>\n                  <div>\n                  <Link className=\"HomePage-link\" to={project.link}>See Project</Link>\n                  </div>\n                </div>\n                <div className=\"HomePage-project-card--item\">\n                  <img className=\"HomePage-project-card--image\" src={`${project.image}`} alt=\"Plant Life Project Screenshot\"/>\n                </div>\n              </section>\n          \n            ))\n          }\n            \n          \n          </main>\n          {/* <footer>\n            <section>\n              <h4>\n                Credits\n              </h4>\n              <p>Hero illustration courtesy of SuperHi, colors updated by Gideon Ibemere, Jr</p>\n            </section>\n          </footer> */}\n    </div>\n     );\n}\n \nexport default HomePage\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport './Nav.css'\n\nconst Nav = () => {\n    return ( \n        <nav className=\"PL-nav\">\n           <Link to=\"/plant-life\">Home</Link>\n           <Link to=\"/plant-life/shop\">Shop</Link>\n           <Link to=\"/plant-life/about\" >About</Link>\n           <Link to=\"/plant-life/help\" >Help</Link>\n           <Link to=\"/plant-life/blog\" >Blog</Link>\n           <Link className=\"PL-back\" to=\"/\" >JS For Designers</Link>\n        </nav>\n     );\n}\n \nexport default Nav;","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\n\n\nimport \"./PlantLife-Home.css\"\n\nclass Home extends Component {\n    state = {\n        //  keep track of the slide zero indexed\n        currentSlide: 0,\n\n        // keep track of the z-index of the slides (first-child is initialized at z-index: 1;)\n        z: 1,\n\n        // dynamically create img jsx tags below such that a ref for each tag is created simultaneously \n        imageUrls: [\n            './assets/plant-life/plant1.jpg',\n            './assets/plant-life/plant2.jpg',\n            './assets/plant-life/plant3.jpg',\n            './assets/plant-life/plant4.jpg',\n            './assets/plant-life/plant5.jpg'\n        ]\n    }\n    \n    \n    // When the div.PL-home--slides is clicked this function runs\n    handleSlideClick = () => {\n        // when an image is clicked increase the currentSlide by 1\n        let currentSlide = this.state.currentSlide + 1\n\n        // if currentSlide is greater than the total number of slides, make it equal to 0 \n        if (currentSlide > this.state.imageUrls.length - 1) {\n            currentSlide = 0;\n        }\n\n        // when an image is clicked increase the z-index by 1\n        let z = this.state.z + 1\n        \n        \n        // removes the animation from the style for EVERY IMAGE\n        this.images.forEach(image => {\n            image.style.animation = ''\n        })\n\n        // sets state to the increased values of currentSlide and z (index)\n        this.setState({currentSlide, z })\n        \n\n        // * Pick the right image\n\n        //sets the z-index to the current slide such that it is higher than the previous\n        this.images[currentSlide].style.zIndex = z\n\n        // adds the keyframes fade animation to the currently visibile slide such that it nicely fades in\n        this.images[currentSlide].style.animation = \"fade 0.5s\"\n\n      \n        \n    }\n\n    // When the mouse goes over the div.PL-home--slides area this function fires\n    handleSlideMouseOver = () => {\n        this.images.forEach(image => {\n            const x = 25 * (Math.floor(Math.random() * 5)) - 50\n            const y = 25 * (Math.floor(Math.random() * 5)) - 50\n\n            image.style.transform = `translate(${x}px, ${y}px)`\n        })\n    }\n\n    // When the mouse goes out of the div.PL-home--slides area this function fires\n    handleSlideMouseOut = () => {\n        this.images.forEach(image => {\n            image.style.transform = ''\n        })\n    }\n\n    componentDidMount() {\n        // destructoring props for ease of use\n        const {menuIsOpen, handleMenuClick} = this.props;\n\n        // if this.state.menuIsOpen = true, fire handleMenuClick which sets this.state.menuIsOpen to !this.state.menuIsOpen otherwise return (aka do nothing)\n        if (menuIsOpen) {\n            handleMenuClick()\n        } else {\n         return \n        }\n    }\n\n    // initializes a variable \"images\" to an empty array. This is the variable that holds the reference to the img tags in the slide show\n    images = []\n\n    render() { \n        return (  \n        <section className='PL-home'>\n            <div onMouseOut={this.handleSlideMouseOut} onMouseOver={this.handleSlideMouseOver} onClick={this.handleSlideClick} className=\"PL-home--slides\">\n                {this.state.imageUrls.map((image, idx) => (\n\n                <img key={idx} src={`${image}`} ref={(ref) => {this.images[idx] = ref}} alt=\"\"/>\n                ))}\n            \n            </div>\n            <div className=\"PL-home--content\">\n               <h1>Plant set</h1>\n               <p>\n               This beginner plant set, containing 6 succulents, 3 cacti and 2 trees is aimed at sprucing up your apartment. Itâ€™s suitable for places with both bright and low access to sunlight. Each plant comes with itâ€™s own perfect plant bot.\n               </p>\n               <Link to=\"/plant-life/shop\" className=\"PL-button\">Buy for $599</Link>\n            </div>\n        </section>\n        );\n    }\n}\n \nexport default Home;\n","import React, { Component } from 'react';\nimport {  Route,  Switch} from 'react-router-dom'\nimport { Nav } from './components'\nimport { Home } from './components'\nimport open from './assets/menu.svg'\nimport close from './assets/close.svg'\n\nimport './PlantLife.css'\n\nclass PlantLife extends Component {\n    state = { \n        menuIsOpen: false,\n     }\n\n\n    handleMenuClick = () => {\n        this.setState({\n            menuIsOpen: !this.state.menuIsOpen\n        })\n    }\n\n    render() { \n        return ( \n            <div className=\"fade\">\n            <Nav />\n            <main className={this.state.menuIsOpen ? 'PL-main open' : 'PL-main'}>\n                <p onClick={this.handleMenuClick} className=\"PL-toggle-nav\">\n                    {this.state.menuIsOpen ? (\n                            <><img src={close} alt=\"\"/>Close\n                            </>\n                        ) : (\n<>\n                            <img src={open} alt=\"\"/>\n                            Menu\n                            </>\n                        )\n                    }\n                </p>\n                <Switch>\n                    <Route exact path=\"/plant-life\" render={() => (<Home  {...this.state} handleMenuClick={this.handleMenuClick}/>)} />\n                    <Route path=\"/plant-life/shop\" render={() => (<div>Shop</div>)} />\n                    <Route path=\"/plant-life/about\" render={() => (<div>About</div>)} />\n                    <Route path=\"/plant-life/help\" render={() => (<div>Help</div>)} />\n                    <Route path=\"/plant-life/blog\" render={() => (<div>Blog</div>)} />\n                </Switch>\n            </main>\n            </div>\n         );\n    }\n}\n \nexport default PlantLife;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport {HomePage, PlantLife} from './Pages'\n\n\n\nfunction App() {\n \n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        \n        <Route \n          path=\"/plant-life\" \n          component={PlantLife} \n          /> \n       \n        {/* \n        <Route \n        exact path=\"/type-checker\" \n        component={TypeChecker} \n        /> \n        */}\n        {/* <Route \n        exact path=\"/plant-life\" \n        component={PlantLife} \n        /> */}\n        {/* <Route \n        exact path=\"/plant-life\" \n        component={PlantLife} \n        /> */}\n        {/* <Route \n        exact path=\"/plant-life\" \n        component={PlantLife} \n        /> */}\n      </Switch>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}